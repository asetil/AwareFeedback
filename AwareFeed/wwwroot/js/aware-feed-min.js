!function () { const e = { options: { showButton: void 0, apiUrl: "https://localhost:7141/feedback", cssUrl: "https://localhost:7141/css/feedback-plugin.css", localization: { tr: { ratePage: "Sayfayı Değerlendirin", careOpinions: "Görüşlerinizi Önemsiyoruz", changeWhat: "Sayfamızda Neyi Değiştirmek İstersiniz?", whatDifficulties: "Sayfamızda Neleri Kullanmakta Zorlanıyorsunuz?", thoughts: "Düşünceleriniz", pageRate: "Sayfamızı Oylayın", btnCancel: "Vazgeç", btnSend: "Gönder", messageSuccess: "Geri bildiriminiz başarıyla alındı.", messageNoInfo: "Herhangi bir bilgi girişi yapmadınız!", messageSendError: "Geri bildiriminiz gönderilirken bir hata meydana geldi. Lütfen daha sonra tekrar deneyiniz!" }, en: { ratePage: "Rate the Page", careOpinions: "We Care About Your Opinions", changeWhat: "What would you like to change on our page?", whatDifficulties: "What do you have difficulty using on our page?", thoughts: "Your thoughts", pageRate: "Vote Our Page", btnCancel: "Cancel", btnSend: "Send", messageSuccess: "Your feedback has been received successfully.", messageNoInfo: "You have not entered any information!", messageSendError: "An error occurred while sending your feedback. Please try again later!" } } }, init: function () { const e = document.createElement("link"); e.rel = "stylesheet", e.type = "text/css", e.href = this.options.cssUrl, document.head.appendChild(e), window.awareFeed = window.awareFeed || {}; let t = this.options.localization[window.awareFeed.lang || "tr"]; const a = document.createElement("div"); a.classList.add("aware-feedback"); const n = document.createElement("button"); n.title = t.ratePage, n.classList.add("feedback-button"), n.onclick = this.togglePopup.bind(this, !1), a.appendChild(n); const s = document.createElement("div"); s.classList.add("feedback-popup"); const i = document.createElement("div"); i.classList.add("feedback-loading"); const d = document.createElement("div"); d.classList.add("feedback-loading-spinner"), i.appendChild(d), s.appendChild(i); const o = document.createElement("h3"); o.innerText = t.careOpinions, o.classList.add("feedback-title"), s.appendChild(o); const c = document.createElement("label"); c.innerText = t.changeWhat, c.classList.add("lbl-feed"), s.appendChild(c); const l = document.createElement("textarea"); l.placeholder = t.thoughts, l.classList.add("feedback-textarea"), s.appendChild(l); const r = document.createElement("label"); r.innerText = t.whatDifficulties, r.classList.add("lbl-feed"), s.appendChild(r); const h = document.createElement("textarea"); h.placeholder = t.thoughts, h.classList.add("feedback-textarea"), s.appendChild(h); const u = document.createElement("label"); u.innerText = t.pageRate, u.classList.add("lbl-feed"), u.classList.add("mb-0"), s.appendChild(u); const p = document.createElement("div"); p.classList.add("star-rating"); let m = 0; for (let e = 1; e <= 5; e++) { const t = document.createElement("span"); t.classList.add("star"), t.innerText = "★", t.dataset.rating = 6 - e, t.onclick = () => { m = 6 - e, this.updateStarRating(p, m) }, p.appendChild(t) } s.appendChild(p); const g = document.createElement("span"); g.innerText = "", g.classList.add("feedback-message"), g.classList.add("hide"), s.appendChild(g); const f = document.createElement("div"); f.classList.add("feedback-button-container"); const b = document.createElement("button"); b.innerText = t.btnSend, b.classList.add("feedback-submit-button"), b.onclick = () => { this.sendFeedback(l.value, h.value, m) }; const L = document.createElement("button"); L.innerText = t.btnCancel, L.classList.add("feedback-cancel-button"), L.onclick = this.togglePopup.bind(this, !0), f.appendChild(L), f.appendChild(b), s.appendChild(f), a.appendChild(s), document.body.appendChild(a) }, togglePopup: function (e) { const t = document.querySelector(".feedback-popup"), a = document.querySelector(".feedback-button"); e ? (t.classList.remove("active"), a.classList.remove("hide")) : (this.toggleLoader(!1), t.classList.add("active"), a.classList.add("hide")) }, updateStarRating: function (e, t) { e.querySelectorAll(".star").forEach(((e, a) => { 5 - a <= t ? e.classList.add("rated") : e.classList.remove("rated") })) }, showMessage: function (e) { const t = document.querySelector(".feedback-message"); t.innerText = e, t.classList.remove("hide"), setTimeout((() => { t.classList.add("hide") }), 5e3) }, toggleLoader: function (e) { const t = document.querySelector(".feedback-loading"); e ? t.classList.add("active") : t.classList.remove("active") }, sendFeedback: function (e, t, a) { this.toggleLoader(!0), window.awareFeed = window.awareFeed || {}; let n = this.options.localization[window.awareFeed.lang || "tr"]; if (!e.trim() && !t.trim() && (!a || a <= 0)) return this.showMessage(n.messageNoInfo), this.toggleLoader(!1), !1; fetch(this.options.apiUrl, { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ path: window.location.pathname || "/", content: e, difficulties: t, rating: a, applicationId: window.awareFeed.application, userId: window.awareFeed.userId, type: 1 }) }).then((e => e.json())).then((e => { this.toggleLoader(!1), this.showMessage(n.messageSuccess), this.togglePopup(!0) })).catch((e => { this.toggleLoader(!1), console.error("AWARE_FEED_ERROR_1", e), this.showMessage(n.messageSendError) })) } }; document.addEventListener("DOMContentLoaded", (function () { e.init() })) }();